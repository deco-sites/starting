{
  "__resolveType": "site/sections/priceCalculator.tsx",
  "calculatorHTML": "<!DOCTYPE html> <html lang=\"en\"> <head>     <meta charset=\"UTF-8\">     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">     <title>Deco.cx Pricing Calculator</title>     <script src=\"https://cdn.tailwindcss.com\"></script>     <style>         body {             background-color: #1a1a1a;             color: #ffffff;         }         .custom-select {             appearance: none;             background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='white' viewBox='0 0 24 24'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E\");             background-repeat: no-repeat;             background-position: right 0.7rem top 50%;             background-size: 1.5rem auto;         }     </style> </head> <body class=\"min-h-screen flex items-center justify-center\">     <div class=\"container mx-auto p-8 bg-gray-900 rounded-lg shadow-xl max-w-4xl\">         <h1 class=\"text-4xl font-bold mb-8 text-center text-green-400\">Deco.cx Pricing Calculator</h1>                  <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">             <div>                 <h2 class=\"text-2xl font-semibold mb-4\">Configuration</h2>                 <div class=\"mb-4\">                     <label class=\"block mb-2\">Currency</label>                     <select id=\"currency\" class=\"w-full bg-gray-800 text-white p-2 rounded custom-select\">                         <option value=\"BRL\">BRL</option>                         <option value=\"USD\">USD</option>                     </select>                 </div>                 <div class=\"mb-4\">                     <label class=\"block mb-2\">Plan</label>                     <select id=\"plan\" class=\"w-full bg-gray-800 text-white p-2 rounded custom-select\">                         <option value=\"pro\">Pro</option>                         <option value=\"enterprise\">Enterprise</option>                     </select>                 </div>                 <div class=\"mb-4\">                     <label id=\"seatsLabel\" class=\"block mb-2\">Number of Seats</label>                     <input type=\"number\" id=\"seats\" min=\"1\" value=\"1\" class=\"w-full bg-gray-800 text-white p-2 rounded\">                 </div>                 <div id=\"enterpriseSeats\" class=\"mb-4 hidden\">                     <label class=\"block mb-2\">Number of Editor Seats</label>                     <input type=\"number\" id=\"editorSeats\" min=\"0\" value=\"0\" class=\"w-full bg-gray-800 text-white p-2 rounded\">                 </div>                 <div class=\"mb-4\">                     <label class=\"block mb-2\">Infrastructure</label>                     <select id=\"infrastructure\" class=\"w-full bg-gray-800 text-white p-2 rounded custom-select\">                         <option value=\"selfHosting\">Self Hosting</option>                         <option value=\"decoCloud\">Deco Cloud</option>                     </select>                 </div>                 <div class=\"mb-4\">                     <label class=\"block mb-2\">Expected Monthly Pageviews</label>                     <input type=\"number\" id=\"pageviews\" min=\"0\" value=\"0\" class=\"w-full bg-gray-800 text-white p-2 rounded\">                 </div>                 <div class=\"mb-4\">                     <label class=\"block mb-2\">Support Plan</label>                     <select id=\"support\" class=\"w-full bg-gray-800 text-white p-2 rounded custom-select\">                         <option value=\"free\">Free</option>                         <option value=\"premium\">Premium</option>                         <option value=\"enterprise\">Enterprise</option>                     </select>                 </div>             </div>                          <div>                 <h2 class=\"text-2xl font-semibold mb-4\">Estimated Costs</h2>                 <div class=\"bg-gray-800 p-4 rounded\">                     <div class=\"mb-4\">                         <span class=\"font-semibold\">Seats Cost:</span>                         <span id=\"seatsCost\" class=\"float-right\"></span>                     </div>                     <div class=\"mb-4\">                         <span class=\"font-semibold\">Infrastructure Cost:</span>                         <span id=\"infrastructureCost\" class=\"float-right\"></span>                     </div>                     <div class=\"mb-4\">                         <span class=\"font-semibold\">Support Cost:</span>                         <span id=\"supportCost\" class=\"float-right\"></span>                     </div>                     <div class=\"border-t border-gray-600 pt-4 mt-4\">                         <span class=\"font-semibold text-lg\">Total Monthly Cost:</span>                         <span id=\"totalCost\" class=\"float-right font-semibold text-lg\"></span>                     </div>                 </div>                                  <h3 class=\"text-xl font-semibold mt-8 mb-4\">Scenario-Based Costs</h3>                 <div class=\"bg-gray-800 p-4 rounded\">                     <div class=\"mb-4\">                         <span class=\"font-semibold\">Efficient:</span>                         <span id=\"efficientCost\" class=\"float-right\"></span>                     </div>                     <div class=\"mb-4\">                         <span class=\"font-semibold\">Unoptimized:</span>                         <span id=\"unoptimizedCost\" class=\"float-right\"></span>                     </div>                     <div class=\"mb-4\">                         <span class=\"font-semibold\">Overloaded:</span>                         <span id=\"overloadedCost\" class=\"float-right\"></span>                     </div>                 </div>             </div>         </div>     </div>      <script>         const currency = document.getElementById('currency');         const plan = document.getElementById('plan');         const seats = document.getElementById('seats');         const editorSeats = document.getElementById('editorSeats');         const enterpriseSeats = document.getElementById('enterpriseSeats');         const infrastructure = document.getElementById('infrastructure');         const pageviews = document.getElementById('pageviews');         const support = document.getElementById('support');          const seatsCost = document.getElementById('seatsCost');         const infrastructureCost = document.getElementById('infrastructureCost');         const supportCost = document.getElementById('supportCost');         const totalCost = document.getElementById('totalCost');         const efficientCost = document.getElementById('efficientCost');         const unoptimizedCost = document.getElementById('unoptimizedCost');         const overloadedCost = document.getElementById('overloadedCost');          const prices = {             USD: {                 pro: { builder: 9 },                 enterprise: { builder: 99, editor: 49 },                 selfHosting: { requests: 0.0000008, bandwidth: 0.1 },                 decoCloud: { requests: 0.000001, bandwidth: 1 },                 support: { premium: 1000, enterprise: 2000 }             },             BRL: {                 pro: { builder: 45 },                 enterprise: { builder: 500, editor: 250 },                 selfHosting: { requests: 0.000004, bandwidth: 0.5 },                 decoCloud: { requests: 0.00004, bandwidth: 5 },                 support: { premium: 5000, enterprise: 10000 }             }         };          function formatCurrency(amount, currencyCode) {             return new Intl.NumberFormat('en-US', { style: 'currency', currency: currencyCode }).format(amount);         }          function calculateCosts() {             const currencyCode = currency.value;             const planType = plan.value;             const numSeats = parseInt(seats.value);             const numEditorSeats = parseInt(editorSeats.value);             const infra = infrastructure.value;             const views = parseInt(pageviews.value);             const supportPlan = support.value;              let totalSeatsCost = 0;             if (planType === 'pro') {                 totalSeatsCost = numSeats * prices[currencyCode].pro.builder;             } else {                 totalSeatsCost = (numSeats * prices[currencyCode].enterprise.builder) +                                   (numEditorSeats * prices[currencyCode].enterprise.editor);             }              const infraCost = calculateInfrastructureCost(currencyCode, infra, views);             const supportCostValue = supportPlan === 'free' ? 0 : prices[currencyCode].support[supportPlan];              const total = totalSeatsCost + infraCost + supportCostValue;              seatsCost.textContent = formatCurrency(totalSeatsCost, currencyCode);             infrastructureCost.textContent = formatCurrency(infraCost, currencyCode);             supportCost.textContent = formatCurrency(supportCostValue, currencyCode);             totalCost.textContent = formatCurrency(total, currencyCode);              calculateScenarioCosts(currencyCode, infra, views);         }          function calculateInfrastructureCost(currencyCode, infra, views) {             const requestsPerView = 10;             const bandwidthPerView = 0.002;             const monthlyRequests = views * requestsPerView;             const monthlyBandwidth = views * bandwidthPerView;              const requestCost = monthlyRequests * prices[currencyCode][infra].requests;             const bandwidthCost = monthlyBandwidth * prices[currencyCode][infra].bandwidth;              return requestCost + bandwidthCost;         }          function calculateScenarioCosts(currencyCode, infra, views) {             const scenarios = {                 efficient: { requests: 7, bandwidth: 0.001 },                 unoptimized: { requests: 10, bandwidth: 0.002 },                 overloaded: { requests: 15, bandwidth: 0.003 }             };              for (const [scenario, values] of Object.entries(scenarios)) {                 const monthlyRequests = views * values.requests;                 const monthlyBandwidth = views * values.bandwidth;                  const requestCost = monthlyRequests * prices[currencyCode][infra].requests;                 const bandwidthCost = monthlyBandwidth * prices[currencyCode][infra].bandwidth;                  const totalCost = requestCost + bandwidthCost;                 document.getElementById(`${scenario}Cost`).textContent = formatCurrency(totalCost, currencyCode);             }         }          function updateUI() {             enterpriseSeats.style.display = plan.value === 'enterprise' ? 'block' : 'none';             document.getElementById('seatsLabel').textContent = plan.value === 'enterprise' ? 'Number of Builder Seats' : 'Number of Seats';             calculateCosts();         }          [currency, plan, seats, editorSeats, infrastructure, pageviews, support].forEach(el => {             el.addEventListener('change', updateUI);             el.addEventListener('input', updateUI);         });          updateUI();     </script> </body> </html>"
}